Test Name:	Trinity.FFI.Metagen.UnitTests.Test.TestNewSwigGen
Test Outcome:	Passed
Result StandardOutput:
List`1
SS
C4
S
List`1
C3
List`1
C2
C1
=====================

%module
%include <stdint.i>
%{
#include "swig_accessor.h"
#include "CellAccessor.h"
#define SWIG_FILE_WITH_INIT
static void* list_STRING_BNew(void*);
static void* list_STRING_BGet(void*);
static void list_STRING_BSet(void*, void*);
static void list_STRING_LSet(void*, int, char*);
static bool list_STRING_LContains(void*, char*);
static int list_STRING_LCount(void*);
static bool list_STRING_LInsertAt(void*, int, char*);
static bool list_STRING_LRemoveAt(void*, int);
static void list_STRING_LAppend(void*, char*);
static char* list_STRING_LGet(void*, int);
static void* list_STRING_LGet_BGet(void*);
static void list_STRING_LGet_BSet(void*, void*);
static void* create_list_STRING();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_I32_BNew(void*);
static void* list_I32_BGet(void*);
static void list_I32_BSet(void*, void*);
static void list_I32_LSet(void*, int, int32_t);
static bool list_I32_LContains(void*, int32_t);
static int list_I32_LCount(void*);
static bool list_I32_LInsertAt(void*, int, int32_t);
static bool list_I32_LRemoveAt(void*, int);
static void list_I32_LAppend(void*, int32_t);
static int32_t list_I32_LGet(void*, int);
static void* list_I32_LGet_BGet(void*);
static void list_I32_LGet_BSet(void*, void*);
static void* create_list_I32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);
void* Unbox(void*);
static void* list_STRING_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0000ll)(arg1);
}
static void* list_STRING_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0040ll)(arg1);
}
static void list_STRING_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0080ll)(arg1, arg2);
}
static void list_STRING_LSet(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2e0140ll)(arg1, arg2, arg3);
}
static bool list_STRING_LContains(void* arg2, char* arg1){
return static_cast<bool (*)(void*, char*)>(0x27a9d2e0240ll)(arg1, arg2);
}
static int list_STRING_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e0340ll)(arg1);
}
static bool list_STRING_LInsertAt(void* arg3, int arg2, char* arg1){
return static_cast<bool (*)(void*, int, char*)>(0x27a9d2e0380ll)(arg1, arg2, arg3);
}
static bool list_STRING_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e0480ll)(arg1, arg2);
}
static void list_STRING_LAppend(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e0540ll)(arg1, arg2);
}
static char* list_STRING_LGet(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2e0600ll)(arg1, arg2);
}
static void* list_STRING_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0680ll)(arg1);
}
static void list_STRING_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0700ll)(arg1, arg2);
}


static void* create_list_STRING(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_STRING_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_SS_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0800ll)(arg1);
}
static void* struct_SS_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0840ll)(arg1);
}
static void struct_SS_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0880ll)(arg1, arg2);
}
static void struct_SS_SSet_s(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0940ll)(arg1, arg2);
}
static void* struct_SS_SGet_s(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0a00ll)(arg1);
}
static void* struct_SS_SGet_s_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0a40ll)(arg1);
}
static void struct_SS_SGet_s_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0a80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0b40ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0c00ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e0c40ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e0c80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e0d40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e0d80ll)(arg1, arg2);
}
static int struct_SS_SGet_s_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e0e00ll)(arg1);
}
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e0e40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e0f00ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e0f80ll)(arg1, arg2);
}
static int32_t struct_SS_SGet_s_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e1000ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e1040ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e1080ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e10c0ll)(arg1, arg2);
}
static char* struct_SS_SGet_s_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2e1180ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e11c0ll)(arg1);
}
static void struct_SS_SGet_s_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e1200ll)(arg1, arg2);
}
static void struct_SS_SSet_ls(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e12c0ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e1380ll)(arg1);
}
static void* struct_SS_SGet_ls_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e13c0ll)(arg1);
}
static void struct_SS_SGet_ls_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e1400ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e14c0ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LContains(void* arg2, void* arg1){
return static_cast<bool (*)(void*, void*)>(0x27a9d2e15c0ll)(arg1, arg2);
}
static int struct_SS_SGet_ls_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e1700ll)(arg1);
}
static bool struct_SS_SGet_ls_LInsertAt(void* arg3, int arg2, void* arg1){
return static_cast<bool (*)(void*, int, void*)>(0x27a9d2e1780ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e1880ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LAppend(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e1980ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e1a40ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e1ac0ll)(arg1);
}
static void struct_SS_SGet_ls_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e1b80ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SSet_li(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e1c80ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e1d80ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e1e00ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e1ec0ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int, int32_t)>(0x27a9d2e1fc0ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e2080ll)(arg1, arg2, arg3);
}
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void* arg2, int arg1){
return static_cast<int (*)(void*, int)>(0x27a9d2e2180ll)(arg1, arg2);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x27a9d2e2200ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void* arg3, int arg2, int arg1){
return static_cast<bool (*)(void*, int, int)>(0x27a9d2e2300ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e2400ll)(arg1, arg2, arg3);
}
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void* arg3, int arg2, int arg1){
return static_cast<int32_t (*)(void*, int, int)>(0x27a9d2e24c0ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e2580ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e2640ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SSet_str(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2e2700ll)(arg1, arg2, arg3);
}
static char* struct_SS_SGet_ls_LGet_SGet_str(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2e2840ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e28c0ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e2980ll)(arg1, arg2, arg3);
}


static void* create_struct_SS(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_SS_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C4_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2ac0ll)(arg1);
}
static void* cell_C4_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2b00ll)(arg1);
}
static void cell_C4_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e2b80ll)(arg1, arg2);
}
static void cell_C4_SSet_ss(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e2c80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2d40ll)(arg1);
}
static void* cell_C4_SGet_ss_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2d80ll)(arg1);
}
static void cell_C4_SGet_ss_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e2dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_s(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e2e80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2f40ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e2f80ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e2fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e3080ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e3140ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e3180ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e31c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e3280ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e32c0ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e3340ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e3380ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e3440ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e34c0ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e3540ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e3580ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e35c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e3600ll)(arg1, arg2);
}
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2e36c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e3700ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e3740ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_ls(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e3800ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e38c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_ls_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e3900ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e3940ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e3a00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LContains(void* arg2, void* arg1){
return static_cast<bool (*)(void*, void*)>(0x27a9d2e3b00ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_ls_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e3c40ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void* arg3, int arg2, void* arg1){
return static_cast<bool (*)(void*, int, void*)>(0x27a9d2e3cc0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e3dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LAppend(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e3ec0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e3f80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e4000ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e40c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e41c0ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e42c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e4340ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e4400ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int, int32_t)>(0x27a9d2e4500ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e45c0ll)(arg1, arg2, arg3);
}
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void* arg2, int arg1){
return static_cast<int (*)(void*, int)>(0x27a9d2e46c0ll)(arg1, arg2);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x27a9d2e4740ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void* arg3, int arg2, int arg1){
return static_cast<bool (*)(void*, int, int)>(0x27a9d2e4840ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e4940ll)(arg1, arg2, arg3);
}
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void* arg3, int arg2, int arg1){
return static_cast<int32_t (*)(void*, int, int)>(0x27a9d2e4a00ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e4ac0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e4b80ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2e4c40ll)(arg1, arg2, arg3);
}
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2e4d80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e4e00ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e4ec0ll)(arg1, arg2, arg3);
}
static void cell_C4_SSet_s(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5000ll)(arg1, arg2);
}
static void* cell_C4_SGet_s(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e50c0ll)(arg1);
}
static void* cell_C4_SGet_s_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5100ll)(arg1);
}
static void cell_C4_SGet_s_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5180ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5240ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5300ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5340ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5380ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e5440ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e54c0ll)(arg1, arg2);
}
static int cell_C4_SGet_s_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e5580ll)(arg1);
}
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e55c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e5680ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e5740ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_s_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e57c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5840ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e58c0ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e5940ll)(arg1, arg2);
}
static char* cell_C4_SGet_s_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2e5a00ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5a40ll)(arg1);
}
static void cell_C4_SGet_s_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5a80ll)(arg1, arg2);
}
static void cell_C4_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5b40ll)(arg1, arg2);
}
static void* cell_C4_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5c00ll)(arg1);
}
static void* cell_C4_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e5c40ll)(arg1);
}
static void cell_C4_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e5cc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e5d80ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e5e00ll)(arg1, arg2);
}
static int cell_C4_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e5ec0ll)(arg1);
}
static bool cell_C4_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e5f00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e5fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e6080ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e6100ll)(arg1, arg2);
}
static void* cell_C4_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6180ll)(arg1);
}
static void cell_C4_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6200ll)(arg1, arg2);
}
static void cell_C4_SSet_ls(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6280ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6340ll)(arg1);
}
static void* cell_C4_SGet_ls_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6380ll)(arg1);
}
static void cell_C4_SGet_ls_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6400ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LSet(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2e64c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LContains(void* arg2, char* arg1){
return static_cast<bool (*)(void*, char*)>(0x27a9d2e6600ll)(arg1, arg2);
}
static int cell_C4_SGet_ls_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e6700ll)(arg1);
}
static bool cell_C4_SGet_ls_LInsertAt(void* arg3, int arg2, char* arg1){
return static_cast<bool (*)(void*, int, char*)>(0x27a9d2e6780ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e68c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LAppend(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e69c0ll)(arg1, arg2);
}
static char* cell_C4_SGet_ls_LGet(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2e6ac0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6b40ll)(arg1);
}
static void cell_C4_SGet_ls_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6c00ll)(arg1, arg2);
}


static void* create_cell_C4(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C4_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_S_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6d40ll)(arg1);
}
static void* struct_S_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6d80ll)(arg1);
}
static void struct_S_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6dc0ll)(arg1, arg2);
}
static void struct_S_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6e80ll)(arg1, arg2);
}
static void* struct_S_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6f40ll)(arg1);
}
static void* struct_S_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e6f80ll)(arg1);
}
static void struct_S_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e6fc0ll)(arg1, arg2);
}
static void struct_S_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e7080ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e70c0ll)(arg1, arg2);
}
static int struct_S_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e7140ll)(arg1);
}
static bool struct_S_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e7180ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e7240ll)(arg1, arg2);
}
static void struct_S_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e72c0ll)(arg1, arg2);
}
static int32_t struct_S_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e7340ll)(arg1, arg2);
}
static void* struct_S_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e7380ll)(arg1);
}
static void struct_S_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e73c0ll)(arg1, arg2);
}
static void struct_S_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2e7400ll)(arg1, arg2);
}
static char* struct_S_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2e74c0ll)(arg1);
}
static void* struct_S_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e7500ll)(arg1);
}
static void struct_S_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e7540ll)(arg1, arg2);
}


static void* create_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_struct_S_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e7600ll)(arg1);
}
static void* list_struct_S_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e7640ll)(arg1);
}
static void list_struct_S_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e7680ll)(arg1, arg2);
}
static void list_struct_S_LSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e7740ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LContains(void* arg2, void* arg1){
return static_cast<bool (*)(void*, void*)>(0x27a9d2e7840ll)(arg1, arg2);
}
static int list_struct_S_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e7940ll)(arg1);
}
static bool list_struct_S_LInsertAt(void* arg3, int arg2, void* arg1){
return static_cast<bool (*)(void*, int, void*)>(0x27a9d2e7980ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e7a80ll)(arg1, arg2);
}
static void list_struct_S_LAppend(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e7b40ll)(arg1, arg2);
}
static void* list_struct_S_LGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e7bc0ll)(arg1, arg2);
}
static void* list_struct_S_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e7c40ll)(arg1);
}
static void list_struct_S_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e7d00ll)(arg1, arg2);
}
static void list_struct_S_LGet_SSet_li(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e7e00ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e7f00ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_li_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e7f80ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e8000ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LSet(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int, int32_t)>(0x27a9d2e8100ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LContains(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e8180ll)(arg1, arg2, arg3);
}
static int list_struct_S_LGet_SGet_li_LCount(void* arg2, int arg1){
return static_cast<int (*)(void*, int)>(0x27a9d2e8280ll)(arg1, arg2);
}
static bool list_struct_S_LGet_SGet_li_LInsertAt(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x27a9d2e8300ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void* arg3, int arg2, int arg1){
return static_cast<bool (*)(void*, int, int)>(0x27a9d2e8400ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LAppend(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e8500ll)(arg1, arg2, arg3);
}
static int32_t list_struct_S_LGet_SGet_li_LGet(void* arg3, int arg2, int arg1){
return static_cast<int32_t (*)(void*, int, int)>(0x27a9d2e85c0ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e8640ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_LGet_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e8700ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SSet_str(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2e8780ll)(arg1, arg2, arg3);
}
static char* list_struct_S_LGet_SGet_str(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2e8880ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_str_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e8900ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_str_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e8980ll)(arg1, arg2, arg3);
}


static void* create_list_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C3_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e8a80ll)(arg1);
}
static void* cell_C3_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e8ac0ll)(arg1);
}
static void cell_C3_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e8b40ll)(arg1, arg2);
}
static void cell_C3_SSet_i(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e8c00ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_i(void* arg1){
return static_cast<int32_t (*)(void*)>(0x27a9d2e8c40ll)(arg1);
}
static void* cell_C3_SGet_i_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e8c80ll)(arg1);
}
static void cell_C3_SGet_i_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e8cc0ll)(arg1, arg2);
}
static void cell_C3_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e8d00ll)(arg1, arg2);
}
static void* cell_C3_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e8dc0ll)(arg1);
}
static void* cell_C3_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e8e00ll)(arg1);
}
static void cell_C3_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e8e40ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2e8f00ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2e8f40ll)(arg1, arg2);
}
static int cell_C3_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e8fc0ll)(arg1);
}
static bool cell_C3_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e9000ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e90c0ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2e9140ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2e91c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e9200ll)(arg1);
}
static void cell_C3_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e9240ll)(arg1, arg2);
}
static void cell_C3_SSet_ls(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e9280ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e9340ll)(arg1);
}
static void* cell_C3_SGet_ls_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e9380ll)(arg1);
}
static void cell_C3_SGet_ls_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e93c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e9480ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LContains(void* arg2, void* arg1){
return static_cast<bool (*)(void*, void*)>(0x27a9d2e9580ll)(arg1, arg2);
}
static int cell_C3_SGet_ls_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2e96c0ll)(arg1);
}
static bool cell_C3_SGet_ls_LInsertAt(void* arg3, int arg2, void* arg1){
return static_cast<bool (*)(void*, int, void*)>(0x27a9d2e9740ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2e9840ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LAppend(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e9940ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e9a00ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2e9a80ll)(arg1);
}
static void cell_C3_SGet_ls_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2e9b40ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SSet_li(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e9c40ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e9d40ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2e9dc0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2e9e40ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int, int32_t)>(0x27a9d2e9f40ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2e9fc0ll)(arg1, arg2, arg3);
}
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void* arg2, int arg1){
return static_cast<int (*)(void*, int)>(0x27a9d2ea0c0ll)(arg1, arg2);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void* arg4, int arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x27a9d2ea140ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void* arg3, int arg2, int arg1){
return static_cast<bool (*)(void*, int, int)>(0x27a9d2ea240ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2ea340ll)(arg1, arg2, arg3);
}
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void* arg3, int arg2, int arg1){
return static_cast<int32_t (*)(void*, int, int)>(0x27a9d2ea400ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2ea4c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2ea580ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SSet_str(void* arg3, int arg2, char* arg1){
return static_cast<void (*)(void*, int, char*)>(0x27a9d2ea600ll)(arg1, arg2, arg3);
}
static char* cell_C3_SGet_ls_LGet_SGet_str(void* arg2, int arg1){
return static_cast<char* (*)(void*, int)>(0x27a9d2ea700ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void* arg2, int arg1){
return static_cast<void* (*)(void*, int)>(0x27a9d2ea780ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void* arg3, int arg2, void* arg1){
return static_cast<void (*)(void*, int, void*)>(0x27a9d2ea840ll)(arg1, arg2, arg3);
}
static void cell_C3_SSet_s(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ea940ll)(arg1, arg2);
}
static void* cell_C3_SGet_s(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eaa00ll)(arg1);
}
static void* cell_C3_SGet_s_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eaa40ll)(arg1);
}
static void cell_C3_SGet_s_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eaac0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eab80ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eac40ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eac80ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eacc0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2ead80ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2eadc0ll)(arg1, arg2);
}
static int cell_C3_SGet_s_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2eae80ll)(arg1);
}
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2eaec0ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2eaf80ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2eb040ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_s_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2eb0c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb140ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eb1c0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2eb200ll)(arg1, arg2);
}
static char* cell_C3_SGet_s_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2eb2c0ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb300ll)(arg1);
}
static void cell_C3_SGet_s_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eb340ll)(arg1, arg2);
}


static void* create_cell_C3(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C3_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_I32_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb400ll)(arg1);
}
static void* list_I32_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb440ll)(arg1);
}
static void list_I32_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eb480ll)(arg1, arg2);
}
static void list_I32_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2eb540ll)(arg1, arg2, arg3);
}
static bool list_I32_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2eb580ll)(arg1, arg2);
}
static int list_I32_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2eb600ll)(arg1);
}
static bool list_I32_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2eb640ll)(arg1, arg2, arg3);
}
static bool list_I32_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2eb700ll)(arg1, arg2);
}
static void list_I32_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2eb780ll)(arg1, arg2);
}
static int32_t list_I32_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2eb800ll)(arg1, arg2);
}
static void* list_I32_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb840ll)(arg1);
}
static void list_I32_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eb880ll)(arg1, arg2);
}


static void* create_list_I32(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_I32_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C2_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb8c0ll)(arg1);
}
static void* cell_C2_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2eb900ll)(arg1);
}
static void cell_C2_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eb940ll)(arg1, arg2);
}
static void cell_C2_SSet_li(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2eba00ll)(arg1, arg2);
}
static void* cell_C2_SGet_li(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ebac0ll)(arg1);
}
static void* cell_C2_SGet_li_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ebb00ll)(arg1);
}
static void cell_C2_SGet_li_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ebb40ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LSet(void* arg3, int arg2, int32_t arg1){
return static_cast<void (*)(void*, int, int32_t)>(0x27a9d2ebc00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LContains(void* arg2, int32_t arg1){
return static_cast<bool (*)(void*, int32_t)>(0x27a9d2ebc40ll)(arg1, arg2);
}
static int cell_C2_SGet_li_LCount(void* arg1){
return static_cast<int (*)(void*)>(0x27a9d2ebcc0ll)(arg1);
}
static bool cell_C2_SGet_li_LInsertAt(void* arg3, int arg2, int32_t arg1){
return static_cast<bool (*)(void*, int, int32_t)>(0x27a9d2ebd00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LRemoveAt(void* arg2, int arg1){
return static_cast<bool (*)(void*, int)>(0x27a9d2ebdc0ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LAppend(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2ebe40ll)(arg1, arg2);
}
static int32_t cell_C2_SGet_li_LGet(void* arg2, int arg1){
return static_cast<int32_t (*)(void*, int)>(0x27a9d2ebec0ll)(arg1, arg2);
}
static void* cell_C2_SGet_li_LGet_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ebf00ll)(arg1);
}
static void cell_C2_SGet_li_LGet_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ebf40ll)(arg1, arg2);
}
static void cell_C2_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2ebf80ll)(arg1, arg2);
}
static char* cell_C2_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2ec040ll)(arg1);
}
static void* cell_C2_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ec080ll)(arg1);
}
static void cell_C2_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ec0c0ll)(arg1, arg2);
}


static void* create_cell_C2(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C2_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C1_BNew(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ec180ll)(arg1);
}
static void* cell_C1_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ec1c0ll)(arg1);
}
static void cell_C1_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ec200ll)(arg1, arg2);
}
static void cell_C1_SSet_i(void* arg2, int32_t arg1){
return static_cast<void (*)(void*, int32_t)>(0x27a9d2ec2c0ll)(arg1, arg2);
}
static int32_t cell_C1_SGet_i(void* arg1){
return static_cast<int32_t (*)(void*)>(0x27a9d2ec300ll)(arg1);
}
static void* cell_C1_SGet_i_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ec340ll)(arg1);
}
static void cell_C1_SGet_i_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ec380ll)(arg1, arg2);
}
static void cell_C1_SSet_str(void* arg2, char* arg1){
return static_cast<void (*)(void*, char*)>(0x27a9d2ec3c0ll)(arg1, arg2);
}
static char* cell_C1_SGet_str(void* arg1){
return static_cast<char* (*)(void*)>(0x27a9d2ec480ll)(arg1);
}
static void* cell_C1_SGet_str_BGet(void* arg1){
return static_cast<void* (*)(void*)>(0x27a9d2ec4c0ll)(arg1);
}
static void cell_C1_SGet_str_BSet(void* arg2, void* arg1){
return static_cast<void (*)(void*, void*)>(0x27a9d2ec500ll)(arg1, arg2);
}


static void* create_cell_C1(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C1_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}



void* UseCell(int64_t cellid, int32_t options)
{
    CellAccessor* accessor = new CellAccessor();
    accessor->cellId = cellid;
    auto errCode = LockCell(*accessor, options);
    if (errCode)
    throw errCode;
    return accessor;
}


void* Unbox(void* object)
{
  return cast_object(object);
}

%}
static void* list_STRING_BNew(void*);
static void* list_STRING_BGet(void*);
static void list_STRING_BSet(void*, void*);
static void list_STRING_LSet(void*, int, char*);
static bool list_STRING_LContains(void*, char*);
static int list_STRING_LCount(void*);
static bool list_STRING_LInsertAt(void*, int, char*);
static bool list_STRING_LRemoveAt(void*, int);
static void list_STRING_LAppend(void*, char*);
static char* list_STRING_LGet(void*, int);
static void* list_STRING_LGet_BGet(void*);
static void list_STRING_LGet_BSet(void*, void*);
static void* create_list_STRING();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_I32_BNew(void*);
static void* list_I32_BGet(void*);
static void list_I32_BSet(void*, void*);
static void list_I32_LSet(void*, int, int32_t);
static bool list_I32_LContains(void*, int32_t);
static int list_I32_LCount(void*);
static bool list_I32_LInsertAt(void*, int, int32_t);
static bool list_I32_LRemoveAt(void*, int);
static void list_I32_LAppend(void*, int32_t);
static int32_t list_I32_LGet(void*, int);
static void* list_I32_LGet_BGet(void*);
static void list_I32_LGet_BSet(void*, void*);
static void* create_list_I32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);
void* Unbox(void*);

