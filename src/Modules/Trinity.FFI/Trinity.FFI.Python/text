Test Name:	Trinity.FFI.Metagen.UnitTests.Test.TestNewSwigGen
Test Outcome:	Passed
Result StandardOutput:
List`1
SS
C4
S
List`1
C3
List`1
C2
C1
=====================

%module
%include <stdint.i>
%{
#include "swig_accessor.h"
#include "CellAccessor.h"
#define SWIG_FILE_WITH_INIT
static void* list_string_BNew(void*);
static void* list_string_BGet(void*);
static void list_string_BSet(void*, void*);
static void list_string_LSet(void*, int, char*);
static bool list_string_LContains(void*, char*);
static int list_string_LCount(void*);
static bool list_string_LInsertAt(void*, int, char*);
static bool list_string_LRemoveAt(void*, int);
static void list_string_LAppend(void*, char*);
static char* list_string_LGet(void*, int);
static void* list_string_LGet_BGet(void*);
static void list_string_LGet_BSet(void*, void*);
static void* create_list_string();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_int32_BNew(void*);
static void* list_int32_BGet(void*);
static void list_int32_BSet(void*, void*);
static void list_int32_LSet(void*, int, int32_t);
static bool list_int32_LContains(void*, int32_t);
static int list_int32_LCount(void*);
static bool list_int32_LInsertAt(void*, int, int32_t);
static bool list_int32_LRemoveAt(void*, int);
static void list_int32_LAppend(void*, int32_t);
static int32_t list_int32_LGet(void*, int);
static void* list_int32_LGet_BGet(void*);
static void list_int32_LGet_BSet(void*, void*);
static void* create_list_int32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);
static void* list_string_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580000ll)(arg1);
}
static void* list_string_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580040ll)(arg1);
}
static void list_string_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580080ll)(arg1, arg2);
}
static void list_string_LSet(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b580140ll)(arg1, arg2, arg3);
}
static bool list_string_LContains(arg2 void*, arg1 char*){
return static_cast<bool (*)(void*, char*)>(0x2a17b580240ll)(arg1, arg2);
}
static int list_string_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b580340ll)(arg1);
}
static bool list_string_LInsertAt(arg3 void*, arg2 int, arg1 char*){
return static_cast<bool (*)(void*, int, char*)>(0x2a17b580380ll)(arg1, arg2, arg3);
}
static bool list_string_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b580480ll)(arg1, arg2);
}
static void list_string_LAppend(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b580540ll)(arg1, arg2);
}
static char* list_string_LGet(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b580600ll)(arg1, arg2);
}
static void* list_string_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580680ll)(arg1);
}
static void list_string_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580700ll)(arg1, arg2);
}


static void* create_list_string(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_string_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_SS_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580800ll)(arg1);
}
static void* struct_SS_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580840ll)(arg1);
}
static void struct_SS_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580880ll)(arg1, arg2);
}
static void struct_SS_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580940ll)(arg1, arg2);
}
static void* struct_SS_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580a00ll)(arg1);
}
static void* struct_SS_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580a40ll)(arg1);
}
static void struct_SS_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580a80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580b40ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580c00ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b580c40ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b580c80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b580d40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b580d80ll)(arg1, arg2);
}
static int struct_SS_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b580e00ll)(arg1);
}
static bool struct_SS_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b580e40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b580f00ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b580f80ll)(arg1, arg2);
}
static int32_t struct_SS_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b581000ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b581040ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b581080ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b5810c0ll)(arg1, arg2);
}
static char* struct_SS_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b581180ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b5811c0ll)(arg1);
}
static void struct_SS_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b581200ll)(arg1, arg2);
}
static void struct_SS_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5812c0ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b581380ll)(arg1);
}
static void* struct_SS_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b5813c0ll)(arg1);
}
static void struct_SS_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b581400ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b5814c0ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a17b5815c0ll)(arg1, arg2);
}
static int struct_SS_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b581700ll)(arg1);
}
static bool struct_SS_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a17b581780ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b581880ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b581980ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b581a40ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b581ac0ll)(arg1);
}
static void struct_SS_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b581b80ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b581c80ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b581d80ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b581e00ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b581ec0ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a17b581fc0ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b582080ll)(arg1, arg2, arg3);
}
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a17b582180ll)(arg1, arg2);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a17b582200ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a17b582300ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b582400ll)(arg1, arg2, arg3);
}
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a17b5824c0ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b582580ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b582640ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b582700ll)(arg1, arg2, arg3);
}
static char* struct_SS_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b582840ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b5828c0ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b582980ll)(arg1, arg2, arg3);
}


static void* create_struct_SS(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_SS_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C4_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582ac0ll)(arg1);
}
static void* cell_C4_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582b00ll)(arg1);
}
static void cell_C4_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b582b80ll)(arg1, arg2);
}
static void cell_C4_SSet_ss(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b582c80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582d40ll)(arg1);
}
static void* cell_C4_SGet_ss_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582d80ll)(arg1);
}
static void cell_C4_SGet_ss_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b582dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b582e80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582f40ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b582f80ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b582fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b583080ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b583140ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b583180ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5831c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b583280ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b5832c0ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b583340ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b583380ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b583440ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b5834c0ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b583540ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b583580ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5835c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b583600ll)(arg1, arg2);
}
static char* cell_C4_SGet_ss_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b5836c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b583700ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b583740ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b583800ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b5838c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b583900ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b583940ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b583a00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a17b583b00ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b583c40ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a17b583cc0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b583dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b583ec0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b583f80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b584000ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5840c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b5841c0ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b5842c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b584340ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b584400ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a17b584500ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b5845c0ll)(arg1, arg2, arg3);
}
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a17b5846c0ll)(arg1, arg2);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a17b584740ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a17b584840ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b584940ll)(arg1, arg2, arg3);
}
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a17b584a00ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b584ac0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b584b80ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b584c40ll)(arg1, arg2, arg3);
}
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b584d80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b584e00ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b584ec0ll)(arg1, arg2, arg3);
}
static void cell_C4_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585000ll)(arg1, arg2);
}
static void* cell_C4_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b5850c0ll)(arg1);
}
static void* cell_C4_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585100ll)(arg1);
}
static void cell_C4_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585180ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585240ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585300ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585340ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585380ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b585440ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b5854c0ll)(arg1, arg2);
}
static int cell_C4_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b585580ll)(arg1);
}
static bool cell_C4_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b5855c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b585680ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b585740ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b5857c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585840ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5858c0ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b585940ll)(arg1, arg2);
}
static char* cell_C4_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b585a00ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585a40ll)(arg1);
}
static void cell_C4_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585a80ll)(arg1, arg2);
}
static void cell_C4_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585b40ll)(arg1, arg2);
}
static void* cell_C4_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585c00ll)(arg1);
}
static void* cell_C4_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b585c40ll)(arg1);
}
static void cell_C4_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b585cc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b585d80ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b585e00ll)(arg1, arg2);
}
static int cell_C4_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b585ec0ll)(arg1);
}
static bool cell_C4_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b585f00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b585fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b586080ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b586100ll)(arg1, arg2);
}
static void* cell_C4_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586180ll)(arg1);
}
static void cell_C4_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586200ll)(arg1, arg2);
}
static void cell_C4_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586280ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586340ll)(arg1);
}
static void* cell_C4_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586380ll)(arg1);
}
static void cell_C4_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586400ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LSet(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b5864c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LContains(arg2 void*, arg1 char*){
return static_cast<bool (*)(void*, char*)>(0x2a17b586600ll)(arg1, arg2);
}
static int cell_C4_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b586700ll)(arg1);
}
static bool cell_C4_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 char*){
return static_cast<bool (*)(void*, int, char*)>(0x2a17b586780ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b5868c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LAppend(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b5869c0ll)(arg1, arg2);
}
static char* cell_C4_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b586ac0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586b40ll)(arg1);
}
static void cell_C4_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586c00ll)(arg1, arg2);
}


static void* create_cell_C4(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C4_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_S_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586d40ll)(arg1);
}
static void* struct_S_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586d80ll)(arg1);
}
static void struct_S_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586dc0ll)(arg1, arg2);
}
static void struct_S_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586e80ll)(arg1, arg2);
}
static void* struct_S_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586f40ll)(arg1);
}
static void* struct_S_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b586f80ll)(arg1);
}
static void struct_S_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b586fc0ll)(arg1, arg2);
}
static void struct_S_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b587080ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b5870c0ll)(arg1, arg2);
}
static int struct_S_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b587140ll)(arg1);
}
static bool struct_S_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b587180ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b587240ll)(arg1, arg2);
}
static void struct_S_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b5872c0ll)(arg1, arg2);
}
static int32_t struct_S_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b587340ll)(arg1, arg2);
}
static void* struct_S_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b587380ll)(arg1);
}
static void struct_S_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5873c0ll)(arg1, arg2);
}
static void struct_S_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b587400ll)(arg1, arg2);
}
static char* struct_S_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b5874c0ll)(arg1);
}
static void* struct_S_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b587500ll)(arg1);
}
static void struct_S_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b587540ll)(arg1, arg2);
}


static void* create_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_struct_S_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b587600ll)(arg1);
}
static void* list_struct_S_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b587640ll)(arg1);
}
static void list_struct_S_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b587680ll)(arg1, arg2);
}
static void list_struct_S_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b587740ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a17b587840ll)(arg1, arg2);
}
static int list_struct_S_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b587940ll)(arg1);
}
static bool list_struct_S_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a17b587980ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b587a80ll)(arg1, arg2);
}
static void list_struct_S_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b587b40ll)(arg1, arg2);
}
static void* list_struct_S_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b587bc0ll)(arg1, arg2);
}
static void* list_struct_S_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b587c40ll)(arg1);
}
static void list_struct_S_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b587d00ll)(arg1, arg2);
}
static void list_struct_S_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b587e00ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b587f00ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b587f80ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b588000ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a17b588100ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b588180ll)(arg1, arg2, arg3);
}
static int list_struct_S_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a17b588280ll)(arg1, arg2);
}
static bool list_struct_S_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a17b588300ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a17b588400ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b588500ll)(arg1, arg2, arg3);
}
static int32_t list_struct_S_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a17b5885c0ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b588640ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b588700ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b588780ll)(arg1, arg2, arg3);
}
static char* list_struct_S_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b588880ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b588900ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b588980ll)(arg1, arg2, arg3);
}


static void* create_list_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C3_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b588a80ll)(arg1);
}
static void* cell_C3_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b588ac0ll)(arg1);
}
static void cell_C3_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b588b40ll)(arg1, arg2);
}
static void cell_C3_SSet_i(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b588c00ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_i(arg1 void*){
return static_cast<int32_t (*)(void*)>(0x2a17b588c40ll)(arg1);
}
static void* cell_C3_SGet_i_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b588c80ll)(arg1);
}
static void cell_C3_SGet_i_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b588cc0ll)(arg1, arg2);
}
static void cell_C3_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b588d00ll)(arg1, arg2);
}
static void* cell_C3_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b588dc0ll)(arg1);
}
static void* cell_C3_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b588e00ll)(arg1);
}
static void cell_C3_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b588e40ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b588f00ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b588f40ll)(arg1, arg2);
}
static int cell_C3_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b588fc0ll)(arg1);
}
static bool cell_C3_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b589000ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b5890c0ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b589140ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b5891c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b589200ll)(arg1);
}
static void cell_C3_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b589240ll)(arg1, arg2);
}
static void cell_C3_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b589280ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b589340ll)(arg1);
}
static void* cell_C3_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b589380ll)(arg1);
}
static void cell_C3_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b5893c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b589480ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a17b589580ll)(arg1, arg2);
}
static int cell_C3_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b5896c0ll)(arg1);
}
static bool cell_C3_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a17b589740ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b589840ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b589940ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b589a00ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b589a80ll)(arg1);
}
static void cell_C3_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b589b40ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b589c40ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b589d40ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b589dc0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b589e40ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a17b589f40ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b589fc0ll)(arg1, arg2, arg3);
}
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a17b58a0c0ll)(arg1, arg2);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a17b58a140ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a17b58a240ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b58a340ll)(arg1, arg2, arg3);
}
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a17b58a400ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b58a4c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b58a580ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a17b58a600ll)(arg1, arg2, arg3);
}
static char* cell_C3_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a17b58a700ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a17b58a780ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a17b58a840ll)(arg1, arg2, arg3);
}
static void cell_C3_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58a940ll)(arg1, arg2);
}
static void* cell_C3_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58aa00ll)(arg1);
}
static void* cell_C3_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58aa40ll)(arg1);
}
static void cell_C3_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58aac0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58ab80ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58ac40ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58ac80ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58acc0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b58ad80ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b58adc0ll)(arg1, arg2);
}
static int cell_C3_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b58ae80ll)(arg1);
}
static bool cell_C3_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b58aec0ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b58af80ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b58b040ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b58b0c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b140ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58b1c0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b58b200ll)(arg1, arg2);
}
static char* cell_C3_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b58b2c0ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b300ll)(arg1);
}
static void cell_C3_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58b340ll)(arg1, arg2);
}


static void* create_cell_C3(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C3_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_int32_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b400ll)(arg1);
}
static void* list_int32_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b440ll)(arg1);
}
static void list_int32_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58b480ll)(arg1, arg2);
}
static void list_int32_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b58b540ll)(arg1, arg2, arg3);
}
static bool list_int32_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b58b580ll)(arg1, arg2);
}
static int list_int32_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b58b600ll)(arg1);
}
static bool list_int32_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b58b640ll)(arg1, arg2, arg3);
}
static bool list_int32_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b58b700ll)(arg1, arg2);
}
static void list_int32_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b58b780ll)(arg1, arg2);
}
static int32_t list_int32_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b58b800ll)(arg1, arg2);
}
static void* list_int32_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b840ll)(arg1);
}
static void list_int32_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58b880ll)(arg1, arg2);
}


static void* create_list_int32(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_int32_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C2_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b8c0ll)(arg1);
}
static void* cell_C2_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58b900ll)(arg1);
}
static void cell_C2_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58b940ll)(arg1, arg2);
}
static void cell_C2_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58ba00ll)(arg1, arg2);
}
static void* cell_C2_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58bac0ll)(arg1);
}
static void* cell_C2_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58bb00ll)(arg1);
}
static void cell_C2_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58bb40ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a17b58bc00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a17b58bc40ll)(arg1, arg2);
}
static int cell_C2_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a17b58bcc0ll)(arg1);
}
static bool cell_C2_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a17b58bd00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a17b58bdc0ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b58be40ll)(arg1, arg2);
}
static int32_t cell_C2_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a17b58bec0ll)(arg1, arg2);
}
static void* cell_C2_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58bf00ll)(arg1);
}
static void cell_C2_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58bf40ll)(arg1, arg2);
}
static void cell_C2_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b58bf80ll)(arg1, arg2);
}
static char* cell_C2_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b58c040ll)(arg1);
}
static void* cell_C2_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58c080ll)(arg1);
}
static void cell_C2_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58c0c0ll)(arg1, arg2);
}


static void* create_cell_C2(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C2_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C1_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58c180ll)(arg1);
}
static void* cell_C1_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58c1c0ll)(arg1);
}
static void cell_C1_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58c200ll)(arg1, arg2);
}
static void cell_C1_SSet_i(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a17b58c2c0ll)(arg1, arg2);
}
static int32_t cell_C1_SGet_i(arg1 void*){
return static_cast<int32_t (*)(void*)>(0x2a17b58c300ll)(arg1);
}
static void* cell_C1_SGet_i_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58c340ll)(arg1);
}
static void cell_C1_SGet_i_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58c380ll)(arg1, arg2);
}
static void cell_C1_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a17b58c3c0ll)(arg1, arg2);
}
static char* cell_C1_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a17b58c480ll)(arg1);
}
static void* cell_C1_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a17b58c4c0ll)(arg1);
}
static void cell_C1_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a17b58c500ll)(arg1, arg2);
}


static void* create_cell_C1(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C1_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}



void* UseCell(int64_t cellid, int32_t options)
{
    CellAccessor* accessor = new CellAccessor();
    accessor->cellId = cellid;
    auto errCode = LockCell(*accessor, options);
    if (errCode)
    throw errCode;
    return accessor;
}

%}
static void* list_string_BNew(void*);
static void* list_string_BGet(void*);
static void list_string_BSet(void*, void*);
static void list_string_LSet(void*, int, char*);
static bool list_string_LContains(void*, char*);
static int list_string_LCount(void*);
static bool list_string_LInsertAt(void*, int, char*);
static bool list_string_LRemoveAt(void*, int);
static void list_string_LAppend(void*, char*);
static char* list_string_LGet(void*, int);
static void* list_string_LGet_BGet(void*);
static void list_string_LGet_BSet(void*, void*);
static void* create_list_string();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_int32_BNew(void*);
static void* list_int32_BGet(void*);
static void list_int32_BSet(void*, void*);
static void list_int32_LSet(void*, int, int32_t);
static bool list_int32_LContains(void*, int32_t);
static int list_int32_LCount(void*);
static bool list_int32_LInsertAt(void*, int, int32_t);
static bool list_int32_LRemoveAt(void*, int);
static void list_int32_LAppend(void*, int32_t);
static int32_t list_int32_LGet(void*, int);
static void* list_int32_LGet_BGet(void*);
static void list_int32_LGet_BSet(void*, void*);
static void* create_list_int32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);

