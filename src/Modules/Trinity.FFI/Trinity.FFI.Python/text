Test Name:	Trinity.FFI.Metagen.UnitTests.Test.TestNewSwigGen
Test Outcome:	Passed
Result StandardOutput:
List`1
SS
C4
S
List`1
C3
List`1
C2
C1
=====================

%module
%include <stdint.i>
%{
#include "swig_accessor.h"
#include "CellAccessor.h"
#define SWIG_FILE_WITH_INIT
static void* list_STRING_BNew(void*);
static void* list_STRING_BGet(void*);
static void list_STRING_BSet(void*, void*);
static void list_STRING_LSet(void*, int, char*);
static bool list_STRING_LContains(void*, char*);
static int list_STRING_LCount(void*);
static bool list_STRING_LInsertAt(void*, int, char*);
static bool list_STRING_LRemoveAt(void*, int);
static void list_STRING_LAppend(void*, char*);
static char* list_STRING_LGet(void*, int);
static void* list_STRING_LGet_BGet(void*);
static void list_STRING_LGet_BSet(void*, void*);
static void* create_list_STRING();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_I32_BNew(void*);
static void* list_I32_BGet(void*);
static void list_I32_BSet(void*, void*);
static void list_I32_LSet(void*, int, int32_t);
static bool list_I32_LContains(void*, int32_t);
static int list_I32_LCount(void*);
static bool list_I32_LInsertAt(void*, int, int32_t);
static bool list_I32_LRemoveAt(void*, int);
static void list_I32_LAppend(void*, int32_t);
static int32_t list_I32_LGet(void*, int);
static void* list_I32_LGet_BGet(void*);
static void list_I32_LGet_BSet(void*, void*);
static void* create_list_I32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);
void* Unbox(void*);
static void* list_STRING_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960000ll)(arg1);
}
static void* list_STRING_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960040ll)(arg1);
}
static void list_STRING_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960080ll)(arg1, arg2);
}
static void list_STRING_LSet(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a859960140ll)(arg1, arg2, arg3);
}
static bool list_STRING_LContains(arg2 void*, arg1 char*){
return static_cast<bool (*)(void*, char*)>(0x2a859960240ll)(arg1, arg2);
}
static int list_STRING_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859960340ll)(arg1);
}
static bool list_STRING_LInsertAt(arg3 void*, arg2 int, arg1 char*){
return static_cast<bool (*)(void*, int, char*)>(0x2a859960380ll)(arg1, arg2, arg3);
}
static bool list_STRING_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859960480ll)(arg1, arg2);
}
static void list_STRING_LAppend(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a859960540ll)(arg1, arg2);
}
static char* list_STRING_LGet(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a859960600ll)(arg1, arg2);
}
static void* list_STRING_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960680ll)(arg1);
}
static void list_STRING_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960700ll)(arg1, arg2);
}


static void* create_list_STRING(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_STRING_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_SS_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960800ll)(arg1);
}
static void* struct_SS_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960840ll)(arg1);
}
static void struct_SS_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960880ll)(arg1, arg2);
}
static void struct_SS_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960940ll)(arg1, arg2);
}
static void* struct_SS_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960a00ll)(arg1);
}
static void* struct_SS_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960a40ll)(arg1);
}
static void struct_SS_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960a80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960b40ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960c00ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859960c40ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859960c80ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859960d40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a859960d80ll)(arg1, arg2);
}
static int struct_SS_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859960e00ll)(arg1);
}
static bool struct_SS_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859960e40ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859960f00ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a859960f80ll)(arg1, arg2);
}
static int32_t struct_SS_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a859961000ll)(arg1, arg2);
}
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859961040ll)(arg1);
}
static void struct_SS_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859961080ll)(arg1, arg2);
}
static void struct_SS_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a8599610c0ll)(arg1, arg2);
}
static char* struct_SS_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a859961180ll)(arg1);
}
static void* struct_SS_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a8599611c0ll)(arg1);
}
static void struct_SS_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859961200ll)(arg1, arg2);
}
static void struct_SS_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599612c0ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859961380ll)(arg1);
}
static void* struct_SS_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a8599613c0ll)(arg1);
}
static void struct_SS_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859961400ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a8599614c0ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a8599615c0ll)(arg1, arg2);
}
static int struct_SS_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859961700ll)(arg1);
}
static bool struct_SS_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a859961780ll)(arg1, arg2, arg3);
}
static bool struct_SS_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859961880ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859961980ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859961a40ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859961ac0ll)(arg1);
}
static void struct_SS_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859961b80ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859961c80ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859961d80ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859961e00ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859961ec0ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a859961fc0ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859962080ll)(arg1, arg2, arg3);
}
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a859962180ll)(arg1, arg2);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a859962200ll)(arg1, arg2, arg3, arg4);
}
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a859962300ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859962400ll)(arg1, arg2, arg3);
}
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a8599624c0ll)(arg1, arg2, arg3);
}
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859962580ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859962640ll)(arg1, arg2, arg3);
}
static void struct_SS_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a859962700ll)(arg1, arg2, arg3);
}
static char* struct_SS_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a859962840ll)(arg1, arg2);
}
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a8599628c0ll)(arg1, arg2);
}
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859962980ll)(arg1, arg2, arg3);
}


static void* create_struct_SS(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_SS_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C4_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962ac0ll)(arg1);
}
static void* cell_C4_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962b00ll)(arg1);
}
static void cell_C4_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859962b80ll)(arg1, arg2);
}
static void cell_C4_SSet_ss(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859962c80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962d40ll)(arg1);
}
static void* cell_C4_SGet_ss_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962d80ll)(arg1);
}
static void cell_C4_SGet_ss_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859962dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859962e80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962f40ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859962f80ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859962fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859963080ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859963140ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859963180ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599631c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859963280ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a8599632c0ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859963340ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859963380ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859963440ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a8599634c0ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a859963540ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859963580ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599635c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a859963600ll)(arg1, arg2);
}
static char* cell_C4_SGet_ss_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a8599636c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859963700ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859963740ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859963800ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a8599638c0ll)(arg1);
}
static void* cell_C4_SGet_ss_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859963900ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859963940ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859963a00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a859963b00ll)(arg1, arg2);
}
static int cell_C4_SGet_ss_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859963c40ll)(arg1);
}
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a859963cc0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859963dc0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859963ec0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859963f80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859964000ll)(arg1);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599640c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a8599641c0ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a8599642c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859964340ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859964400ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a859964500ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a8599645c0ll)(arg1, arg2, arg3);
}
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a8599646c0ll)(arg1, arg2);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a859964740ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a859964840ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859964940ll)(arg1, arg2, arg3);
}
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a859964a00ll)(arg1, arg2, arg3);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859964ac0ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859964b80ll)(arg1, arg2, arg3);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a859964c40ll)(arg1, arg2, arg3);
}
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a859964d80ll)(arg1, arg2);
}
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859964e00ll)(arg1, arg2);
}
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859964ec0ll)(arg1, arg2, arg3);
}
static void cell_C4_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965000ll)(arg1, arg2);
}
static void* cell_C4_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a8599650c0ll)(arg1);
}
static void* cell_C4_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965100ll)(arg1);
}
static void cell_C4_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965180ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965240ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965300ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965340ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965380ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859965440ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a8599654c0ll)(arg1, arg2);
}
static int cell_C4_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859965580ll)(arg1);
}
static bool cell_C4_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a8599655c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859965680ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a859965740ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a8599657c0ll)(arg1, arg2);
}
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965840ll)(arg1);
}
static void cell_C4_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599658c0ll)(arg1, arg2);
}
static void cell_C4_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a859965940ll)(arg1, arg2);
}
static char* cell_C4_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a859965a00ll)(arg1);
}
static void* cell_C4_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965a40ll)(arg1);
}
static void cell_C4_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965a80ll)(arg1, arg2);
}
static void cell_C4_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965b40ll)(arg1, arg2);
}
static void* cell_C4_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965c00ll)(arg1);
}
static void* cell_C4_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859965c40ll)(arg1);
}
static void cell_C4_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859965cc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859965d80ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a859965e00ll)(arg1, arg2);
}
static int cell_C4_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859965ec0ll)(arg1);
}
static bool cell_C4_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859965f00ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859965fc0ll)(arg1, arg2);
}
static void cell_C4_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a859966080ll)(arg1, arg2);
}
static int32_t cell_C4_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a859966100ll)(arg1, arg2);
}
static void* cell_C4_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966180ll)(arg1);
}
static void cell_C4_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966200ll)(arg1, arg2);
}
static void cell_C4_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966280ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966340ll)(arg1);
}
static void* cell_C4_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966380ll)(arg1);
}
static void cell_C4_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966400ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LSet(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a8599664c0ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LContains(arg2 void*, arg1 char*){
return static_cast<bool (*)(void*, char*)>(0x2a859966600ll)(arg1, arg2);
}
static int cell_C4_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859966700ll)(arg1);
}
static bool cell_C4_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 char*){
return static_cast<bool (*)(void*, int, char*)>(0x2a859966780ll)(arg1, arg2, arg3);
}
static bool cell_C4_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a8599668c0ll)(arg1, arg2);
}
static void cell_C4_SGet_ls_LAppend(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a8599669c0ll)(arg1, arg2);
}
static char* cell_C4_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a859966ac0ll)(arg1, arg2);
}
static void* cell_C4_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966b40ll)(arg1);
}
static void cell_C4_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966c00ll)(arg1, arg2);
}


static void* create_cell_C4(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C4_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* struct_S_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966d40ll)(arg1);
}
static void* struct_S_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966d80ll)(arg1);
}
static void struct_S_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966dc0ll)(arg1, arg2);
}
static void struct_S_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966e80ll)(arg1, arg2);
}
static void* struct_S_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966f40ll)(arg1);
}
static void* struct_S_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859966f80ll)(arg1);
}
static void struct_S_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859966fc0ll)(arg1, arg2);
}
static void struct_S_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859967080ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a8599670c0ll)(arg1, arg2);
}
static int struct_S_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859967140ll)(arg1);
}
static bool struct_S_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859967180ll)(arg1, arg2, arg3);
}
static bool struct_S_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859967240ll)(arg1, arg2);
}
static void struct_S_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a8599672c0ll)(arg1, arg2);
}
static int32_t struct_S_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a859967340ll)(arg1, arg2);
}
static void* struct_S_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859967380ll)(arg1);
}
static void struct_S_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599673c0ll)(arg1, arg2);
}
static void struct_S_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a859967400ll)(arg1, arg2);
}
static char* struct_S_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a8599674c0ll)(arg1);
}
static void* struct_S_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859967500ll)(arg1);
}
static void struct_S_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859967540ll)(arg1, arg2);
}


static void* create_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_struct_S_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859967600ll)(arg1);
}
static void* list_struct_S_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859967640ll)(arg1);
}
static void list_struct_S_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859967680ll)(arg1, arg2);
}
static void list_struct_S_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859967740ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a859967840ll)(arg1, arg2);
}
static int list_struct_S_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859967940ll)(arg1);
}
static bool list_struct_S_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a859967980ll)(arg1, arg2, arg3);
}
static bool list_struct_S_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859967a80ll)(arg1, arg2);
}
static void list_struct_S_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859967b40ll)(arg1, arg2);
}
static void* list_struct_S_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859967bc0ll)(arg1, arg2);
}
static void* list_struct_S_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859967c40ll)(arg1);
}
static void list_struct_S_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859967d00ll)(arg1, arg2);
}
static void list_struct_S_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859967e00ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859967f00ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859967f80ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859968000ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a859968100ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859968180ll)(arg1, arg2, arg3);
}
static int list_struct_S_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a859968280ll)(arg1, arg2);
}
static bool list_struct_S_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a859968300ll)(arg1, arg2, arg3, arg4);
}
static bool list_struct_S_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a859968400ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859968500ll)(arg1, arg2, arg3);
}
static int32_t list_struct_S_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a8599685c0ll)(arg1, arg2, arg3);
}
static void* list_struct_S_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859968640ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859968700ll)(arg1, arg2, arg3);
}
static void list_struct_S_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a859968780ll)(arg1, arg2, arg3);
}
static char* list_struct_S_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a859968880ll)(arg1, arg2);
}
static void* list_struct_S_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859968900ll)(arg1, arg2);
}
static void list_struct_S_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859968980ll)(arg1, arg2, arg3);
}


static void* create_list_struct_S(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_struct_S_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C3_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859968a80ll)(arg1);
}
static void* cell_C3_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859968ac0ll)(arg1);
}
static void cell_C3_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859968b40ll)(arg1, arg2);
}
static void cell_C3_SSet_i(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a859968c00ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_i(arg1 void*){
return static_cast<int32_t (*)(void*)>(0x2a859968c40ll)(arg1);
}
static void* cell_C3_SGet_i_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859968c80ll)(arg1);
}
static void cell_C3_SGet_i_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859968cc0ll)(arg1, arg2);
}
static void cell_C3_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859968d00ll)(arg1, arg2);
}
static void* cell_C3_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859968dc0ll)(arg1);
}
static void* cell_C3_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859968e00ll)(arg1);
}
static void cell_C3_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859968e40ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a859968f00ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a859968f40ll)(arg1, arg2);
}
static int cell_C3_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a859968fc0ll)(arg1);
}
static bool cell_C3_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859969000ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a8599690c0ll)(arg1, arg2);
}
static void cell_C3_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a859969140ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a8599691c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859969200ll)(arg1);
}
static void cell_C3_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859969240ll)(arg1, arg2);
}
static void cell_C3_SSet_ls(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859969280ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859969340ll)(arg1);
}
static void* cell_C3_SGet_ls_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859969380ll)(arg1);
}
static void cell_C3_SGet_ls_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a8599693c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859969480ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LContains(arg2 void*, arg1 void*){
return static_cast<bool (*)(void*, void*)>(0x2a859969580ll)(arg1, arg2);
}
static int cell_C3_SGet_ls_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a8599696c0ll)(arg1);
}
static bool cell_C3_SGet_ls_LInsertAt(arg3 void*, arg2 int, arg1 void*){
return static_cast<bool (*)(void*, int, void*)>(0x2a859969740ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_ls_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a859969840ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LAppend(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859969940ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859969a00ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a859969a80ll)(arg1);
}
static void cell_C3_SGet_ls_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a859969b40ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SSet_li(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859969c40ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859969d40ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a859969dc0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a859969e40ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int, int32_t)>(0x2a859969f40ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a859969fc0ll)(arg1, arg2, arg3);
}
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(arg2 void*, arg1 int){
return static_cast<int (*)(void*, int)>(0x2a85996a0c0ll)(arg1, arg2);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(arg4 void*, arg3 int, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int, int32_t)>(0x2a85996a140ll)(arg1, arg2, arg3, arg4);
}
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(arg3 void*, arg2 int, arg1 int){
return static_cast<bool (*)(void*, int, int)>(0x2a85996a240ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a85996a340ll)(arg1, arg2, arg3);
}
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(arg3 void*, arg2 int, arg1 int){
return static_cast<int32_t (*)(void*, int, int)>(0x2a85996a400ll)(arg1, arg2, arg3);
}
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a85996a4c0ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a85996a580ll)(arg1, arg2, arg3);
}
static void cell_C3_SGet_ls_LGet_SSet_str(arg3 void*, arg2 int, arg1 char*){
return static_cast<void (*)(void*, int, char*)>(0x2a85996a600ll)(arg1, arg2, arg3);
}
static char* cell_C3_SGet_ls_LGet_SGet_str(arg2 void*, arg1 int){
return static_cast<char* (*)(void*, int)>(0x2a85996a700ll)(arg1, arg2);
}
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(arg2 void*, arg1 int){
return static_cast<void* (*)(void*, int)>(0x2a85996a780ll)(arg1, arg2);
}
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(arg3 void*, arg2 int, arg1 void*){
return static_cast<void (*)(void*, int, void*)>(0x2a85996a840ll)(arg1, arg2, arg3);
}
static void cell_C3_SSet_s(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996a940ll)(arg1, arg2);
}
static void* cell_C3_SGet_s(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996aa00ll)(arg1);
}
static void* cell_C3_SGet_s_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996aa40ll)(arg1);
}
static void cell_C3_SGet_s_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996aac0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996ab80ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996ac40ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996ac80ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996acc0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a85996ad80ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a85996adc0ll)(arg1, arg2);
}
static int cell_C3_SGet_s_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a85996ae80ll)(arg1);
}
static bool cell_C3_SGet_s_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a85996aec0ll)(arg1, arg2, arg3);
}
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a85996af80ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a85996b040ll)(arg1, arg2);
}
static int32_t cell_C3_SGet_s_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a85996b0c0ll)(arg1, arg2);
}
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b140ll)(arg1);
}
static void cell_C3_SGet_s_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996b1c0ll)(arg1, arg2);
}
static void cell_C3_SGet_s_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a85996b200ll)(arg1, arg2);
}
static char* cell_C3_SGet_s_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a85996b2c0ll)(arg1);
}
static void* cell_C3_SGet_s_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b300ll)(arg1);
}
static void cell_C3_SGet_s_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996b340ll)(arg1, arg2);
}


static void* create_cell_C3(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C3_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* list_I32_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b400ll)(arg1);
}
static void* list_I32_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b440ll)(arg1);
}
static void list_I32_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996b480ll)(arg1, arg2);
}
static void list_I32_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a85996b540ll)(arg1, arg2, arg3);
}
static bool list_I32_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a85996b580ll)(arg1, arg2);
}
static int list_I32_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a85996b600ll)(arg1);
}
static bool list_I32_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a85996b640ll)(arg1, arg2, arg3);
}
static bool list_I32_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a85996b700ll)(arg1, arg2);
}
static void list_I32_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a85996b780ll)(arg1, arg2);
}
static int32_t list_I32_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a85996b800ll)(arg1, arg2);
}
static void* list_I32_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b840ll)(arg1);
}
static void list_I32_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996b880ll)(arg1, arg2);
}


static void* create_list_I32(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = list_I32_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C2_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b8c0ll)(arg1);
}
static void* cell_C2_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996b900ll)(arg1);
}
static void cell_C2_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996b940ll)(arg1, arg2);
}
static void cell_C2_SSet_li(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996ba00ll)(arg1, arg2);
}
static void* cell_C2_SGet_li(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996bac0ll)(arg1);
}
static void* cell_C2_SGet_li_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996bb00ll)(arg1);
}
static void cell_C2_SGet_li_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996bb40ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LSet(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<void (*)(void*, int, int32_t)>(0x2a85996bc00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LContains(arg2 void*, arg1 int32_t){
return static_cast<bool (*)(void*, int32_t)>(0x2a85996bc40ll)(arg1, arg2);
}
static int cell_C2_SGet_li_LCount(arg1 void*){
return static_cast<int (*)(void*)>(0x2a85996bcc0ll)(arg1);
}
static bool cell_C2_SGet_li_LInsertAt(arg3 void*, arg2 int, arg1 int32_t){
return static_cast<bool (*)(void*, int, int32_t)>(0x2a85996bd00ll)(arg1, arg2, arg3);
}
static bool cell_C2_SGet_li_LRemoveAt(arg2 void*, arg1 int){
return static_cast<bool (*)(void*, int)>(0x2a85996bdc0ll)(arg1, arg2);
}
static void cell_C2_SGet_li_LAppend(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a85996be40ll)(arg1, arg2);
}
static int32_t cell_C2_SGet_li_LGet(arg2 void*, arg1 int){
return static_cast<int32_t (*)(void*, int)>(0x2a85996bec0ll)(arg1, arg2);
}
static void* cell_C2_SGet_li_LGet_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996bf00ll)(arg1);
}
static void cell_C2_SGet_li_LGet_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996bf40ll)(arg1, arg2);
}
static void cell_C2_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a85996bf80ll)(arg1, arg2);
}
static char* cell_C2_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a85996c040ll)(arg1);
}
static void* cell_C2_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996c080ll)(arg1);
}
static void cell_C2_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996c0c0ll)(arg1, arg2);
}


static void* create_cell_C2(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C2_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}

static void* cell_C1_BNew(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996c180ll)(arg1);
}
static void* cell_C1_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996c1c0ll)(arg1);
}
static void cell_C1_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996c200ll)(arg1, arg2);
}
static void cell_C1_SSet_i(arg2 void*, arg1 int32_t){
return static_cast<void (*)(void*, int32_t)>(0x2a85996c2c0ll)(arg1, arg2);
}
static int32_t cell_C1_SGet_i(arg1 void*){
return static_cast<int32_t (*)(void*)>(0x2a85996c300ll)(arg1);
}
static void* cell_C1_SGet_i_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996c340ll)(arg1);
}
static void cell_C1_SGet_i_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996c380ll)(arg1, arg2);
}
static void cell_C1_SSet_str(arg2 void*, arg1 char*){
return static_cast<void (*)(void*, char*)>(0x2a85996c3c0ll)(arg1, arg2);
}
static char* cell_C1_SGet_str(arg1 void*){
return static_cast<char* (*)(void*)>(0x2a85996c480ll)(arg1);
}
static void* cell_C1_SGet_str_BGet(arg1 void*){
return static_cast<void* (*)(void*)>(0x2a85996c4c0ll)(arg1);
}
static void cell_C1_SGet_str_BSet(arg2 void*, arg1 void*){
return static_cast<void (*)(void*, void*)>(0x2a85996c500ll)(arg1, arg2);
}


static void* create_cell_C1(){
    CellAccessor* accessor = new CellAccessor();
    auto errCode = cell_C1_BNew(accessor);
    if(errCode)
        throw errCode;
    return accessor;
}



void* UseCell(int64_t cellid, int32_t options)
{
    CellAccessor* accessor = new CellAccessor();
    accessor->cellId = cellid;
    auto errCode = LockCell(*accessor, options);
    if (errCode)
    throw errCode;
    return accessor;
}


void* Unbox(void* object)
{
  return cast_object(object);
}

%}
static void* list_STRING_BNew(void*);
static void* list_STRING_BGet(void*);
static void list_STRING_BSet(void*, void*);
static void list_STRING_LSet(void*, int, char*);
static bool list_STRING_LContains(void*, char*);
static int list_STRING_LCount(void*);
static bool list_STRING_LInsertAt(void*, int, char*);
static bool list_STRING_LRemoveAt(void*, int);
static void list_STRING_LAppend(void*, char*);
static char* list_STRING_LGet(void*, int);
static void* list_STRING_LGet_BGet(void*);
static void list_STRING_LGet_BSet(void*, void*);
static void* create_list_STRING();
static void* struct_SS_BNew(void*);
static void* struct_SS_BGet(void*);
static void struct_SS_BSet(void*, void*);
static void struct_SS_SSet_s(void*, void*);
static void* struct_SS_SGet_s(void*);
static void* struct_SS_SGet_s_BGet(void*);
static void struct_SS_SGet_s_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_li(void*, void*);
static void* struct_SS_SGet_s_SGet_li(void*);
static void* struct_SS_SGet_s_SGet_li_BGet(void*);
static void struct_SS_SGet_s_SGet_li_BSet(void*, void*);
static void struct_SS_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LContains(void*, int32_t);
static int struct_SS_SGet_s_SGet_li_LCount(void*);
static bool struct_SS_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_SS_SGet_s_SGet_li_LRemoveAt(void*, int);
static void struct_SS_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t struct_SS_SGet_s_SGet_li_LGet(void*, int);
static void* struct_SS_SGet_s_SGet_li_LGet_BGet(void*);
static void struct_SS_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void struct_SS_SGet_s_SSet_str(void*, char*);
static char* struct_SS_SGet_s_SGet_str(void*);
static void* struct_SS_SGet_s_SGet_str_BGet(void*);
static void struct_SS_SGet_s_SGet_str_BSet(void*, void*);
static void struct_SS_SSet_ls(void*, void*);
static void* struct_SS_SGet_ls(void*);
static void* struct_SS_SGet_ls_BGet(void*);
static void struct_SS_SGet_ls_BSet(void*, void*);
static void struct_SS_SGet_ls_LSet(void*, int, void*);
static bool struct_SS_SGet_ls_LContains(void*, void*);
static int struct_SS_SGet_ls_LCount(void*);
static bool struct_SS_SGet_ls_LInsertAt(void*, int, void*);
static bool struct_SS_SGet_ls_LRemoveAt(void*, int);
static void struct_SS_SGet_ls_LAppend(void*, void*);
static void* struct_SS_SGet_ls_LGet(void*, int);
static void* struct_SS_SGet_ls_LGet_BGet(void*);
static void struct_SS_SGet_ls_LGet_BSet(void*, void*);
static void struct_SS_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* struct_SS_SGet_ls_LGet_SGet_li(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int struct_SS_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool struct_SS_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool struct_SS_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t struct_SS_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* struct_SS_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void struct_SS_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* struct_SS_SGet_ls_LGet_SGet_str(void*, int);
static void* struct_SS_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void struct_SS_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void* create_struct_SS();
static void* cell_C4_BNew(void*);
static void* cell_C4_BGet(void*);
static void cell_C4_BSet(void*, void*);
static void cell_C4_SSet_ss(void*, void*);
static void* cell_C4_SGet_ss(void*);
static void* cell_C4_SGet_ss_BGet(void*);
static void cell_C4_SGet_ss_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_s(void*, void*);
static void* cell_C4_SGet_ss_SGet_s(void*);
static void* cell_C4_SGet_ss_SGet_s_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_ss_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_ss_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_ss_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_ss_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_ss_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_ss_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SGet_ss_SSet_ls(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls(void*);
static void* cell_C4_SGet_ss_SGet_ls_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LSet(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LContains(void*, void*);
static int cell_C4_SGet_ss_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ss_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C4_SGet_ss_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LAppend(void*, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_BSet(void*, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C4_SGet_ss_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C4_SGet_ss_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C4_SSet_s(void*, void*);
static void* cell_C4_SGet_s(void*);
static void* cell_C4_SGet_s_BGet(void*);
static void cell_C4_SGet_s_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_li(void*, void*);
static void* cell_C4_SGet_s_SGet_li(void*);
static void* cell_C4_SGet_s_SGet_li_BGet(void*);
static void cell_C4_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_s_SGet_li_LCount(void*);
static bool cell_C4_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SGet_s_SSet_str(void*, char*);
static char* cell_C4_SGet_s_SGet_str(void*);
static void* cell_C4_SGet_s_SGet_str_BGet(void*);
static void cell_C4_SGet_s_SGet_str_BSet(void*, void*);
static void cell_C4_SSet_li(void*, void*);
static void* cell_C4_SGet_li(void*);
static void* cell_C4_SGet_li_BGet(void*);
static void cell_C4_SGet_li_BSet(void*, void*);
static void cell_C4_SGet_li_LSet(void*, int, int32_t);
static bool cell_C4_SGet_li_LContains(void*, int32_t);
static int cell_C4_SGet_li_LCount(void*);
static bool cell_C4_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C4_SGet_li_LRemoveAt(void*, int);
static void cell_C4_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C4_SGet_li_LGet(void*, int);
static void* cell_C4_SGet_li_LGet_BGet(void*);
static void cell_C4_SGet_li_LGet_BSet(void*, void*);
static void cell_C4_SSet_ls(void*, void*);
static void* cell_C4_SGet_ls(void*);
static void* cell_C4_SGet_ls_BGet(void*);
static void cell_C4_SGet_ls_BSet(void*, void*);
static void cell_C4_SGet_ls_LSet(void*, int, char*);
static bool cell_C4_SGet_ls_LContains(void*, char*);
static int cell_C4_SGet_ls_LCount(void*);
static bool cell_C4_SGet_ls_LInsertAt(void*, int, char*);
static bool cell_C4_SGet_ls_LRemoveAt(void*, int);
static void cell_C4_SGet_ls_LAppend(void*, char*);
static char* cell_C4_SGet_ls_LGet(void*, int);
static void* cell_C4_SGet_ls_LGet_BGet(void*);
static void cell_C4_SGet_ls_LGet_BSet(void*, void*);
static void* create_cell_C4();
static void* struct_S_BNew(void*);
static void* struct_S_BGet(void*);
static void struct_S_BSet(void*, void*);
static void struct_S_SSet_li(void*, void*);
static void* struct_S_SGet_li(void*);
static void* struct_S_SGet_li_BGet(void*);
static void struct_S_SGet_li_BSet(void*, void*);
static void struct_S_SGet_li_LSet(void*, int, int32_t);
static bool struct_S_SGet_li_LContains(void*, int32_t);
static int struct_S_SGet_li_LCount(void*);
static bool struct_S_SGet_li_LInsertAt(void*, int, int32_t);
static bool struct_S_SGet_li_LRemoveAt(void*, int);
static void struct_S_SGet_li_LAppend(void*, int32_t);
static int32_t struct_S_SGet_li_LGet(void*, int);
static void* struct_S_SGet_li_LGet_BGet(void*);
static void struct_S_SGet_li_LGet_BSet(void*, void*);
static void struct_S_SSet_str(void*, char*);
static char* struct_S_SGet_str(void*);
static void* struct_S_SGet_str_BGet(void*);
static void struct_S_SGet_str_BSet(void*, void*);
static void* create_struct_S();
static void* list_struct_S_BNew(void*);
static void* list_struct_S_BGet(void*);
static void list_struct_S_BSet(void*, void*);
static void list_struct_S_LSet(void*, int, void*);
static bool list_struct_S_LContains(void*, void*);
static int list_struct_S_LCount(void*);
static bool list_struct_S_LInsertAt(void*, int, void*);
static bool list_struct_S_LRemoveAt(void*, int);
static void list_struct_S_LAppend(void*, void*);
static void* list_struct_S_LGet(void*, int);
static void* list_struct_S_LGet_BGet(void*);
static void list_struct_S_LGet_BSet(void*, void*);
static void list_struct_S_LGet_SSet_li(void*, int, void*);
static void* list_struct_S_LGet_SGet_li(void*, int);
static void* list_struct_S_LGet_SGet_li_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_BSet(void*, int, void*);
static void list_struct_S_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LContains(void*, int, int32_t);
static int list_struct_S_LGet_SGet_li_LCount(void*, int);
static bool list_struct_S_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool list_struct_S_LGet_SGet_li_LRemoveAt(void*, int, int);
static void list_struct_S_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t list_struct_S_LGet_SGet_li_LGet(void*, int, int);
static void* list_struct_S_LGet_SGet_li_LGet_BGet(void*, int);
static void list_struct_S_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void list_struct_S_LGet_SSet_str(void*, int, char*);
static char* list_struct_S_LGet_SGet_str(void*, int);
static void* list_struct_S_LGet_SGet_str_BGet(void*, int);
static void list_struct_S_LGet_SGet_str_BSet(void*, int, void*);
static void* create_list_struct_S();
static void* cell_C3_BNew(void*);
static void* cell_C3_BGet(void*);
static void cell_C3_BSet(void*, void*);
static void cell_C3_SSet_i(void*, int32_t);
static int32_t cell_C3_SGet_i(void*);
static void* cell_C3_SGet_i_BGet(void*);
static void cell_C3_SGet_i_BSet(void*, void*);
static void cell_C3_SSet_li(void*, void*);
static void* cell_C3_SGet_li(void*);
static void* cell_C3_SGet_li_BGet(void*);
static void cell_C3_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_li_LCount(void*);
static bool cell_C3_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SSet_ls(void*, void*);
static void* cell_C3_SGet_ls(void*);
static void* cell_C3_SGet_ls_BGet(void*);
static void cell_C3_SGet_ls_BSet(void*, void*);
static void cell_C3_SGet_ls_LSet(void*, int, void*);
static bool cell_C3_SGet_ls_LContains(void*, void*);
static int cell_C3_SGet_ls_LCount(void*);
static bool cell_C3_SGet_ls_LInsertAt(void*, int, void*);
static bool cell_C3_SGet_ls_LRemoveAt(void*, int);
static void cell_C3_SGet_ls_LAppend(void*, void*);
static void* cell_C3_SGet_ls_LGet(void*, int);
static void* cell_C3_SGet_ls_LGet_BGet(void*);
static void cell_C3_SGet_ls_LGet_BSet(void*, void*);
static void cell_C3_SGet_ls_LGet_SSet_li(void*, int, void*);
static void* cell_C3_SGet_ls_LGet_SGet_li(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SGet_li_LSet(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LContains(void*, int, int32_t);
static int cell_C3_SGet_ls_LGet_SGet_li_LCount(void*, int);
static bool cell_C3_SGet_ls_LGet_SGet_li_LInsertAt(void*, int, int, int32_t);
static bool cell_C3_SGet_ls_LGet_SGet_li_LRemoveAt(void*, int, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LAppend(void*, int, int32_t);
static int32_t cell_C3_SGet_ls_LGet_SGet_li_LGet(void*, int, int);
static void* cell_C3_SGet_ls_LGet_SGet_li_LGet_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_li_LGet_BSet(void*, int, void*);
static void cell_C3_SGet_ls_LGet_SSet_str(void*, int, char*);
static char* cell_C3_SGet_ls_LGet_SGet_str(void*, int);
static void* cell_C3_SGet_ls_LGet_SGet_str_BGet(void*, int);
static void cell_C3_SGet_ls_LGet_SGet_str_BSet(void*, int, void*);
static void cell_C3_SSet_s(void*, void*);
static void* cell_C3_SGet_s(void*);
static void* cell_C3_SGet_s_BGet(void*);
static void cell_C3_SGet_s_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_li(void*, void*);
static void* cell_C3_SGet_s_SGet_li(void*);
static void* cell_C3_SGet_s_SGet_li_BGet(void*);
static void cell_C3_SGet_s_SGet_li_BSet(void*, void*);
static void cell_C3_SGet_s_SGet_li_LSet(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LContains(void*, int32_t);
static int cell_C3_SGet_s_SGet_li_LCount(void*);
static bool cell_C3_SGet_s_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C3_SGet_s_SGet_li_LRemoveAt(void*, int);
static void cell_C3_SGet_s_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C3_SGet_s_SGet_li_LGet(void*, int);
static void* cell_C3_SGet_s_SGet_li_LGet_BGet(void*);
static void cell_C3_SGet_s_SGet_li_LGet_BSet(void*, void*);
static void cell_C3_SGet_s_SSet_str(void*, char*);
static char* cell_C3_SGet_s_SGet_str(void*);
static void* cell_C3_SGet_s_SGet_str_BGet(void*);
static void cell_C3_SGet_s_SGet_str_BSet(void*, void*);
static void* create_cell_C3();
static void* list_I32_BNew(void*);
static void* list_I32_BGet(void*);
static void list_I32_BSet(void*, void*);
static void list_I32_LSet(void*, int, int32_t);
static bool list_I32_LContains(void*, int32_t);
static int list_I32_LCount(void*);
static bool list_I32_LInsertAt(void*, int, int32_t);
static bool list_I32_LRemoveAt(void*, int);
static void list_I32_LAppend(void*, int32_t);
static int32_t list_I32_LGet(void*, int);
static void* list_I32_LGet_BGet(void*);
static void list_I32_LGet_BSet(void*, void*);
static void* create_list_I32();
static void* cell_C2_BNew(void*);
static void* cell_C2_BGet(void*);
static void cell_C2_BSet(void*, void*);
static void cell_C2_SSet_li(void*, void*);
static void* cell_C2_SGet_li(void*);
static void* cell_C2_SGet_li_BGet(void*);
static void cell_C2_SGet_li_BSet(void*, void*);
static void cell_C2_SGet_li_LSet(void*, int, int32_t);
static bool cell_C2_SGet_li_LContains(void*, int32_t);
static int cell_C2_SGet_li_LCount(void*);
static bool cell_C2_SGet_li_LInsertAt(void*, int, int32_t);
static bool cell_C2_SGet_li_LRemoveAt(void*, int);
static void cell_C2_SGet_li_LAppend(void*, int32_t);
static int32_t cell_C2_SGet_li_LGet(void*, int);
static void* cell_C2_SGet_li_LGet_BGet(void*);
static void cell_C2_SGet_li_LGet_BSet(void*, void*);
static void cell_C2_SSet_str(void*, char*);
static char* cell_C2_SGet_str(void*);
static void* cell_C2_SGet_str_BGet(void*);
static void cell_C2_SGet_str_BSet(void*, void*);
static void* create_cell_C2();
static void* cell_C1_BNew(void*);
static void* cell_C1_BGet(void*);
static void cell_C1_BSet(void*, void*);
static void cell_C1_SSet_i(void*, int32_t);
static int32_t cell_C1_SGet_i(void*);
static void* cell_C1_SGet_i_BGet(void*);
static void cell_C1_SGet_i_BSet(void*, void*);
static void cell_C1_SSet_str(void*, char*);
static char* cell_C1_SGet_str(void*);
static void* cell_C1_SGet_str_BGet(void*);
static void cell_C1_SGet_str_BSet(void*, void*);
static void* create_cell_C1();
void* lock_cell(int64_t, int32_t);
void* Unbox(void*);

